@model Assignment.Models.AssignmentItemViewModel
@using MvcFileUploader.HtmlHelper
@using MvcFileUploader.Models


@{
    ViewBag.Title = "Edit assignment";
}

<h2>Edit assignment in course @Model.Course.Name</h2>

@using (Html.BeginForm("EditAssignment", "AdminCourse", FormMethod.Post, new { id = "mainForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.Partial("_EditAssignmentDetails")

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button class="btn btn-primary" name="action" value="Save">Save</button>
                <button class="btn btn-danger" name="action" value="delete" onclick="return confirm('Are you sure?')">Delete</button>
                <a class="btn btn-default" href="@Url.Action("Assignments", new { id = Model.Course.ID })">Back</a>
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-md-6">
        <h3>Upload files</h3>
        <div class="alert alert-info">Drag'n'Drop your files here or use the upload button. <br />
            Note: Files with the name
            <ul>
                <li>jenkins.zip</li>
                <li>solution.zip</li>
            </ul>
            are treated as hidden files. These files are not shown to students.
        </div>
        <p class="help-block">max. Filesize 8 MB</p>
        @(Html.MvcFileUpload()
            .UploadAt(Url.Action("AssignmentFiles", new { id = Model.ID }))
            .UIStyle(UploadUI.Bootstrap)
            .WithMaxFileSize(8 * 1024 * 1024)
            .WithFileTypes("/(.*)/i")
            .DisableImagePreview() // After upload there will be no preview
            .RenderInline("_MvcFileUpload")
        )
    </div>
    <div class="col-md-6">
        <h3>Current content</h3>
        @using (Ajax.BeginForm("DeleteAssignmentFile", new { id = Model.ID }, new AjaxOptions() { InsertionMode = InsertionMode.Replace, UpdateTargetId = "currentContent", OnFailure = "alert('Delete failed.')" }))
        {
            <div id="currentContent">
                @Html.Partial("_CurrentAssignmentContent")
            </div>
        }
    </div>
</div>

<hr />

<div class="row">
    <div class="col-md-10">
        <a class="btn btn-default" href="@Url.Action("Assignments", new { id = Model.Course.ID })">Back</a>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}